{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","r","json","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","useHeaderStyles","makeStyles","title","marginLeft","flex","textDecoration","fontSize","color","textTransform","appBar","zIndex","drawer","background","Header","classes","Fragment","AppBar","className","position","Toolbar","to","Button","style","borderRadius","Typography","IconButton","aria-label","useSidebarStyles","themes","width","flexShrink","drawerPaper","toolbar","mixins","Sidebar","Drawer","variant","anchor","paper","List","map","text","index","ListItem","button","key","id","ListItemText","useCardStyles","root","playerImg","minWidth","minHeight","margin","marginBottom","playerName","positionGkp","positionDef","positionMid","positionFwd","statToReadable","total_points","goals_scored","assists","clean_sheets","posStrings","allStatToReadable","allStat","Object","keys","PlayerCard","props","pos","data","element_type","posClasses","imgURL","code","Card","elevation","CardActionArea","onClick","CardContent","align","web_name","Divider","Box","display","flexWrap","alignItems","CardMedia","image","flexGrow","paragraph","noWrap","now_cost","toFixed","marginTop","Grid","container","spacing","item","direction","xs","fontWeight","Players","useState","players","playerDisplay","setPlayerDisplay","offset","setOffset","setPosition","sortBy","setSortBy","playerData","setPlayerData","open","setOpen","match","useRouteMatch","console","log","url","navButtons","flexDirection","justifyContent","Math","trunc","length","TextField","label","onChange","event","filter","player","toLowerCase","includes","target","value","first_name","second_name","FormControl","InputLabel","Select","MenuItem","category","sort","a","b","parseFloat","stat","i","justify","Array","min","sm","lg","xl","maxWidth","matchURL","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","PlayerData","usePlayerDataStyles","maxHeight","overflow","header","padding","breakpoints","down","name","divider","imageCropper","height","exit","marginRight","price","textAlign","alignContent","border","alt","src","Hidden","xsDown","smUp","orientation","backgroundColor","md","Stat","useStatStyles","left","bar","x","y","fill","toString","replace","Content","setData","loaded","setLoaded","useEffect","response","elements","CircularProgress","size","useFooterStyles","Footer","Paper","useMainStyles","Main","useTeamStyles","field","grass","draggable","cursor","Team","formation","ys","coords","cx","j","push","viewBox","xmlns","onLoad","evt","svg","endDrag","addEventListener","href","points","stroke","x1","y1","x2","y2","cy","rx","ry","strokeWidth","useLoginStyles","box","input","doLogin","username","password","JSON","stringify","catch","error","Login","setUsername","setPassword","listener","document","removeEventListener","type","useAppStyles","content","App","ThemeProvider","Container","disableGutters","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.11e343e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Grid, AppBar, Toolbar, Typography, Card, Paper, Container,Box,\n         Drawer, Divider, CardContent, CardMedia, Button, \n         IconButton, List, ListItem, ListItemText, TextField, Select,\n         FormControl, InputLabel, MenuItem, CardActionArea, Fade, Modal,\n         Backdrop, CircularProgress, Hidden,\n        } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PersonIcon from '@material-ui/icons/Person';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport {createAuthProvider} from 'react-token-auth'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n  Redirect,\n} from \"react-router-dom\";\n\nconst [useAuth, authFetch, login, logout] =\n  createAuthProvider({\n      accessTokenKey: 'access_token',\n      onUpdateToken: (token) => fetch('/api/refresh', {\n          method: 'POST',\n          body: token.access_token\n      })\n      .then(r => r.json())\n  });\n\n// Taken from https://github.com/yasoob/Flask-React-JWT/blob/master/src/App.js\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [logged] = useAuth();\n\n  return <Route {...rest} render={(props) => (\n    logged\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n}\n\n// Helper Function\nfunction formatNumber (num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n}\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#421eb0',\n    },\n    secondary: {\n      main: '#ffffff',\n    },\n  },\n  typography: {\n    fontFamily: '\"Futura\"'\n  }\n});\n\nconst drawerWidth = 0;\n\nconst useHeaderStyles = makeStyles((theme) => ({\n  title: {\n    marginLeft: 10,\n    flex: 1,\n    textDecoration: 'none',\n  },\n  typography: {\n    fontSize: 24,\n    color: 'white',\n    textTransform: 'none'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    background: 'linear-gradient(45deg, rgba(2,0,36,1) 0%, rgba(66,30,176,1) 100%)'\n  }\n}));\n\nfunction Header() {\n  const classes = useHeaderStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar className={classes.appBar} position='fixed'>\n        <Toolbar>\n          <Link to='/' className={classes.title}>\n            <Button style={{borderRadius: '10px'}}>\n              <Typography className={classes.typography}>FPL Helper</Typography>\n            </Button>\n          </Link>\n          <Link to='/'>\n            <IconButton aria-label=\"Go to homepage\" color='secondary'>\n              <HomeIcon />          \n            </IconButton>\n          </Link>\n          <Link to='/players'>\n            <IconButton aria-label=\"Go to homepage\" color='secondary'>\n              <PersonIcon />          \n            </IconButton>\n          </Link>\n          <Link to='/team'>\n            <IconButton aria-label=\"Go to homepage\" color='secondary'>\n              <GroupIcon />          \n            </IconButton>\n          </Link>\n          <Link to='/login'>\n            <IconButton aria-label=\"Go to homepage\" color='secondary'>\n              <ExitToAppIcon />          \n            </IconButton>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  )\n}\n\nconst useSidebarStyles = makeStyles((themes) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: '#e6e1f5',\n  },\n  toolbar: themes.mixins.toolbar\n}));\n\nfunction Sidebar() {\n  const classes = useSidebarStyles()\n\n  return (\n    <Drawer className={classes.drawer} \n      variant='permanent' anchor='left'\n      classes={{paper: classes.drawerPaper}}>\n      <div className={classes.toolbar} />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text} id={index}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  )\n}\n\nconst useCardStyles = makeStyles({\n  root: {\n    // minWidth: 290,\n    // maxWidth: 400,\n    // margin: 'auto',\n    // display: 'flex'\n  },\n  playerImg: {\n    minWidth: 110 * 1.2,\n    minHeight: 140 * 1.2,\n    margin: 5,\n    marginBottom: 0,\n  },\n  playerName: {\n    // marginBottom: -10,\n    // marginTop: -10,\n    // padding: '-50px',\n    background: 'linear-gradient(45deg, rgba(2,0,36,1) 0%, rgba(66,30,176,1) 100%)',\n  },\n  positionGkp: {\n    color: '#3e007d',\n  },\n  positionDef: {\n    color: '#007d02'\n  },\n  positionMid: {\n    color: '#343deb'\n  },\n  positionFwd: {\n    color: '#eb3434'\n  },\n});\n\nconst statToReadable = {\n  total_points: 'Points',\n  goals_scored: 'Goals',\n  assists: 'Assists',\n  clean_sheets: 'CS',\n\n}\nconst posStrings= ['GKP', 'DEF', 'MID', 'FWD']\nconst allStatToReadable = {\n  ...statToReadable,\n  'bonus': 'Bonus', \n  'bps': 'BPS', \n  'cost_change_event': 'GW ΔCost',\n  'cost_change_start': 'Total ΔCost',\n  'creativity': 'Creativity', \n  'dreamteam_count': 'Dreamteam #',\n  'event_points': 'GW Points',\n  'form': 'Form', \n  'goals_conceded': 'Conceded',\n  'ict_index': 'ICT',\n  'influence': 'Influence',\n  'minutes': 'Minutes',\n  'now_cost': 'Cost',\n  'own_goals': 'Own Goals',\n  'penalties_missed': 'Pens Missed',\n  'penalties_saved': 'Pens Saved',\n  'points_per_game': 'Pts Per Game',\n  'red_cards': 'Red Cards',\n  'saves': 'Saves',\n  'selected_by_percent': '% Selected',\n  'threat': 'Threat',\n  'transfers_in': 'Transfers In',\n  'transfers_in_event': 'GW In',\n  'transfers_out': 'Transfers Out',\n  'transfers_out_event': 'GW Out',\n  'value_season': 'Value',\n  'yellow_cards': 'Yellow Cards'\n}\nconst allStat = Object.keys(allStatToReadable);\n\nfunction PlayerCard(props) {\n  const classes = useCardStyles();\n\n  const pos = props.data.element_type - 1\n  const posClasses = [classes.positionGkp, classes.positionDef, \n                     classes.positionMid, classes.positionFwd]\n  const imgURL = `https://resources.premierleague.com/premierleague/photos/`\n               + `players/110x140/p${props.data.code}.png`\n\n  return (\n    <Card variant='elevation' elevation={5} className={classes.root}>\n      <CardActionArea onClick={() => props.onClick(props.data)}>\n        <CardContent className={classes.playerName}>\n          <Typography variant='h5' align='center' style={{margin: -10, color: 'white'}}>\n            {props.data.web_name}\n          </Typography>\n        </CardContent>\n        <Divider />\n        <Box display='flex' flexWrap='nowrap' alignItems='flex-end'>\n          <Box>\n            <CardMedia className={classes.playerImg} image={imgURL} />\n          </Box>\n          <Box flexGrow={1}>\n            <CardContent>\n              <Typography color='textSecondary' align='center' paragraph={true} style={{fontSize: 18}} noWrap={true}>\n                <span className={posClasses[pos]}>{posStrings[pos]}</span> • £{(props.data.now_cost / 10).toFixed(1)}\n              </Typography>\n              <Divider style={{marginTop: -10, marginBottom: 10}} />\n              {// Display stats\n              /*Object.keys(statToReadable).map((key) => (\n                <Box display='flex' flexWrap='nowrap'>\n                  <Box><Typography>{statToReadable[key]}</Typography></Box>\n                  <Box flex={1} align='Right'><Typography>{props.data[key]}</Typography></Box>\n                </Box>\n              ))*/}\n              <Grid container spacing={3}>\n                <Grid item container direction='column' xs={6}>\n                  {Object.keys(statToReadable).map((key) => (\n                    <Grid key={key} item align='right'><Typography style={{fontWeight: 'bolder'}}>{statToReadable[key]}</Typography></Grid>\n                  ))}\n                </Grid>\n                <Grid item container direction='column' xs={6}>\n                  {Object.keys(statToReadable).map((key) => (\n                    <Grid item key={key}><Typography>{props.data[key]}</Typography></Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Box>\n        </Box>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nfunction Players(props) {\n  const perPage = 12;\n  const [ playerDisplay, setPlayerDisplay ] = useState(props.players);\n  const [ offset, setOffset ] = useState(0);\n  const [ position, setPosition ] = useState(-1);\n  const [ sortBy, setSortBy ] = useState(0);\n  const [ playerData, setPlayerData ] = useState(null)\n  const [ open, setOpen ] = useState(false);\n\n  let match = useRouteMatch();\n\n  console.log(match.url)\n\n  const navButtons = (\n    <Box display='flex' flexWrap='nowrap'>\n      <IconButton onClick={() => (offset >= perPage) ? setOffset(offset - perPage) : null}>\n        <ChevronLeftIcon fontSize='large' />\n      </IconButton>\n      <Typography style={{display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n        <code>{Math.trunc(offset / perPage) + 1} of {Math.trunc(playerDisplay.length / perPage) + 1}</code>\n      </Typography>\n      <IconButton onClick={() => \n        (offset + perPage < playerDisplay.length) ? setOffset(offset + perPage) : null}>\n        <ChevronRightIcon fontSize='large' />\n      </IconButton>\n    </Box>)\n  \n  return (\n    <div>\n      <div style={{'marginTop': -15, 'marginBottom': 15, display: 'flex'}}>\n        <div style={{flex: 1}}>\n          <TextField style={{width: `calc(100%)`}} label='Name' variant='filled' \n            onChange={(event) => {\n              setPlayerDisplay(props.players.filter(player => \n                player.web_name.toLowerCase().includes(event.target.value.toLowerCase())\n                || player.first_name.toLowerCase().includes(event.target.value.toLowerCase())\n                || player.second_name.toLowerCase().includes(event.target.value.toLowerCase())\n              ))\n              setOffset(0)\n            }}\n          />\n        </div>\n        <div>\n          <FormControl style={{width: 75, marginLeft: 20}}>\n            <InputLabel>Position</InputLabel>\n            <Select value={position}\n              onChange={(event) => {\n                setPosition(event.target.value)\n                setOffset(0)\n                if (event.target.value !== -1)\n                  setPlayerDisplay(props.players.filter(player => \n                  player.element_type === event.target.value))\n                else\n                  setPlayerDisplay(props.players)\n            }}>\n              <MenuItem value={1}>GKP</MenuItem>\n              <MenuItem value={2}>DEF</MenuItem>\n              <MenuItem value={3}>MID</MenuItem>\n              <MenuItem value={4}>FWD</MenuItem>\n              <MenuItem value={-1}>ANY</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div>\n          <FormControl style={{width: 175, marginLeft: 20}}>\n            <InputLabel>Sort By</InputLabel>\n            <Select value={sortBy}\n              onChange={(event) => {\n                if (event.target.value === sortBy) return;\n                setSortBy(event.target.value)\n                setOffset(0)\n                const category = allStat[event.target.value]\n                setPlayerDisplay(props.players.sort((a, b) => \n                ((parseFloat(a[category]) > parseFloat(b[category])) ? -1 : 1)))\n            }}>\n              {\n                allStat.map((stat, i) => (\n                  <MenuItem key={i} value={i}>{allStatToReadable[stat]}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n      <div style={{marginTop: -5, marginBottom: 5, display: 'flex', justifyContent: 'center'}}>\n        {navButtons}\n      </div>\n      <Grid container spacing={1} direction='row' justify='center'>\n        {[...new Array(Math.min(playerDisplay.length - offset, perPage)).keys()].map((i) => (\n            <Grid key={playerDisplay[offset + i].id} item xs={12} sm={6} lg={3} xl={3} style={{maxWidth: 400, minWidth: 290}}>\n              <PlayerCard data={playerDisplay[offset + i]} onClick={(data) => {setPlayerData(data); setOpen(true)}} matchURL={props.matchURL}/>\n            </Grid>)\n        )}\n      </Grid>\n      <div style={{marginTop: 15, marginBottom: -55, display: 'flex', justifyContent: 'center'}}>\n        {navButtons}\n      </div>\n      <Modal\n        aria-labelledby='transition-modal-title'\n        aria-describedby='transition-modal-description'\n        //className={classes.modal}\n        open={open}\n        onClose={() => setOpen(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{timeout: 500}}\n      >\n        <Fade in={open}>\n          <PlayerData data={playerData} onClick={() => setOpen(false)}/>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nconst usePlayerDataStyles = makeStyles({\n  // '@keyframes fadeIn': {\n  //   '0%': {opacity: 0},\n  //   '100%': {opacity: 1}\n  // },\n  // '@keyframes fadeOut': {\n  //   '0%': {opacity: 1},\n  //   '100%': {opacity: 0},\n  // },\n  root: {\n    margin: '10%',\n    marginTop: '15vh',\n    maxHeight: '70vh',\n    background: 'white',\n    //padding: 50,\n    display: 'flex',\n    overflow: 'scroll',\n    // animation: '$fadeIn',\n    // animationDuration: '0.5s',\n    // animationTimingFunction: 'linear',\n    // animationIterationCount: '1'\n  },\n  header: {\n    // display: 'flex',\n    // // border: '10px solid black', \n    // margin: 'auto',\n    // justifyContent: 'center',\n    background: 'linear-gradient(45deg, rgba(2,0,36,1) 0%, rgba(66,30,176,1) 100%)',\n    padding: 50,\n    color: 'white',\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'block'\n    }\n  },\n  name: {\n    //position: 'absolute',\n    //right: '50%',\n    marginLeft: 30, \n    marginTop: 25,\n    display: 'block',\n    flex: 1,\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0,\n    }\n  },\n  divider: {\n    marginBottom: -15\n  },\n  imageCropper: {\n    width: '150px',\n    height: '150px',\n    position: 'relative',\n    overflow: 'hidden',\n    borderRadius: '50%',\n    //margin: 'auto',\n    //display: 'flex'\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      margin:'auto',\n      marginTop: -10,\n    }\n  },\n  image: {\n    //display: 'inline',\n    //margin: '0 auto',\n    marginLeft: '12.5%', // no idea why this has to be 12.5% but it does\n    height: '100%',\n    width: 'auto',\n  },\n  exit: {\n    display: 'flex',\n    margin: 'auto',\n    marginTop: 50,\n    marginRight: 20,\n  },\n  price: {\n    marginLeft: 50,\n    marginTop: 40,\n    display: 'flex',\n    [theme.breakpoints.down('xs')]: {\n      display: 'block',\n      marginLeft: 0,\n      marginTop: 5,\n    }\n  },\n  positionGkp: {\n    color: '#3e007d',\n  },\n  positionDef: {\n    color: '#007d02'\n  },\n  positionMid: {\n    color: '#343deb'\n  },\n  positionFwd: {\n    color: '#eb3434'\n  },\n  text: {\n    //border: '1px solid black',\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      justify: 'center',\n      justifyContent: 'center',\n      alignContent: 'center'\n    }\n  }\n})\n\nfunction PlayerData(props) {\n  console.log(props.data)\n  \n  const classes = usePlayerDataStyles();\n  const imgURL = `https://resources.premierleague.com/premierleague/photos/`\n  + `players/110x140/p${props.data.code}.png`\n\n  // const posClasses = [classes.positionGkp, classes.positionDef, \n  //                     classes.positionMid, classes.positionFwd]\n\n  const posColors = ['#3e007d', '#007d02', '#343deb', '#eb3434'];\n\n  return (\n    <Card className={classes.root} elevation={5}>\n      <div>\n        <Grid container className={classes.header} justify='center'>\n          {/* <Grid item>\n            <IconButton title='Back' className={classes.exit} onClick={props.onClick}>\n              <ChevronLeftIcon style={{transform: 'scale(3)', color: 'white'}}/>\n            </IconButton>\n          </Grid> */}\n          <Grid item className={classes.imageCropper} style={{border: '4px solid ' + posColors[props.data.element_type-1]}}>\n            <img alt={props.data.web_name} className={classes.image} src={imgURL}/>\n          </Grid>\n          <Grid item className={classes.name}>\n            <Hidden xsDown>\n              <Typography variant='h4' style={{marginLeft: 2}}>{props.data.first_name}</Typography>\n              <Typography variant='h3'>{props.data.second_name}</Typography>\n            </Hidden>\n            <Hidden smUp>\n              <div className={classes.text}>\n                <Typography justify='center' style={{fontSize: '10vw'}}>{props.data.web_name}</Typography>\n              </div>\n              <div>\n                <Divider orientation='horizontal' style={{marginTop: 15, marginBottom: 15, backgroundColor: 'white'}}/>\n              </div>\n            </Hidden>\n          </Grid>\n          <Grid item className={classes.price} spacing={3}>\n            <div style={{display: 'flex'}} className={classes.text}>\n              <Typography variant='h3'>\n                {posStrings[props.data.element_type-1]}\n              </Typography>\n            </div>\n            <Hidden xsDown>\n              <div item style={{display: 'flex', marginLeft: 25, marginRight: 25}}>\n                <Divider orientation='vertical' style={{height: '60px', backgroundColor: 'white'}}/>\n              </div>\n            </Hidden>\n            <div style={{display: 'flex'}} className={classes.text}>\n              <Typography variant='h3' noWrap={true} >\n                £{(props.data.now_cost / 10).toFixed(1)}\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n\n        <Divider className={classes.divider} />\n      \n        <Grid container style={{padding: 50}}>\n          {\n            allStat.map((key) => (\n              <Grid item key={key} xs={12} sm={6} md={4}>\n                <Stat stat={allStatToReadable[key]} value={props.data[key]} />\n              </Grid>\n            ))\n          }\n        </Grid>\n      </div>\n    </Card>\n  )\n}\n\nconst useStatStyles = makeStyles({\n  root: {\n    display: 'block',\n    margin: 10,\n  },\n  left: {\n    display: 'flex',\n    flex: 0,\n    marginBottom: -3,\n  },\n  bar: {\n    display: 'flex',\n    flex: 1,\n    //border: '1px solid black', \n    // maxHeight: 10,\n  },\n  data: {\n    minWidth: '80px',\n    marginLeft: 10,\n    marginTop: -5\n  }\n})\n\nfunction Stat(props) {\n  const classes = useStatStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.left}>\n        <Typography noWrap={true} style={{fontWeight: 'bold'}}>\n          {props.stat}\n        </Typography>\n      </div>\n      <div style={{display: 'flex'}}>\n        <div className={classes.bar}>\n          <svg width='100%' height='100%' style={{border: '1px solid black', height: '10px'}}>\n            {/* <rect width='100%' height='100%' stroke='orange' strokeWidth={5} fill='transparent'/> */}\n            <rect x='0' y='0' width='100%' height='100%' fill='black' />\n            <rect x='0' y='0' width='80%' height='100%' fill='green' />\n          </svg>\n        </div>\n        <div className={classes.data}>\n          <Typography align='left'>\n            {formatNumber(props.value)}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Content() {\n  const [data, setData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [playerData, setPlayerData] = useState(null);\n\n  let match = useRouteMatch();\n\n  useEffect(() => {\n    fetch('/data/fpl_data.json', {method: 'GET'})\n    .then(response => response.json())\n    .then(json => {\n      json['elements'].sort((a, b) => \n        ((a['total_points'] > b['total_points']) ? -1 : 1))\n      console.log(json)\n      setData(json)\n      setLoaded(true)\n    })\n  }, []);\n\n  console.log(match.url)\n\n  // if (!loaded)\n  //   return <Typography variant='h2' align='center'>Loading...</Typography>\n  // return (\n  //   <Switch>\n  //     <Route path={`${match.url}/<:pid>`}>\n  //       <PlayerPage />\n  //     </Route>\n  //     <Route path={match.url}>\n  //       <Players players={data.elements} onClick={data => setPlayerData(data)} matchURL={match.url}/>\n  //     </Route>\n  //   </Switch>\n  // )\n\n  if (!loaded)\n    return (\n      <div style={{display: 'block'}}>\n        <Typography variant='h2' align='center'>Loading...</Typography>\n        <CircularProgress size={100}  style={{display: 'flex', margin: 'auto', marginTop: 50}}/>\n      </div>\n    )\n  // else if (playerData === null)\n  else\n    return <Players players={data.elements} onClick={(data) => setPlayerData(data)}/>\n    // return <PlayerData data={playerData} onClick={() => setPlayerData(null)}/>\n\n  // if (playerData !== null)\n  //   return <PlayerData data={playerData} onClick={() => setPlayerData(null)}/>\n  // else if (loaded)\n  //   return <Players players={data.elements} onClick={(data) => setPlayerData(data)}/>\n  // else\n  //   return <Typography variant='h2' align='center'>Loading...</Typography>\n}\n\nconst useFooterStyles = makeStyles({\n  root: {\n  }\n});\n\nfunction Footer() {\n  const classes = useFooterStyles();\n\n  return (\n      <Grid container className={classes.root}>\n        <Grid item xs={1} sm={2}/>\n        <Grid item xs={10} sm={8}>\n          <Paper elevation={0}>\n            {/* <Typography align='center' color='textPrimary' \n             gutterBottom='true' variant='h2'>Footer</Typography> */}\n            <Typography color='textSecondary' align='center'>\n              All data, player likenesses, and logos are property of the Premier League.\n            </Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={1} sm={2}/>\n      </Grid>\n  )\n}\n\nconst useMainStyles = makeStyles({\n  image: {\n    width: '50%',\n    height: 'auto',\n    margin: 'auto',\n    display: 'block'\n  }\n})\n\nfunction Main() {\n  const classes = useMainStyles();\n\n  return (\n    <div>\n      <img className={classes.image} src='https://i.pinimg.com/originals/ac/f5/28/acf5284effcb7adf9fbdc6d0823be418.png' alt='FPL'/>\n      <Typography align='center' variant='h2'>Welcome to FPL Helper!</Typography>\n    </div>\n  )\n}\n\nconst useTeamStyles = makeStyles({\n  field: {\n    margin: 'auto',\n    height: '80vh',\n    display: 'flex',\n    width: '80%'\n    //width: '35vh',\n    //border: '1px solid black'\n    // transform: 'rotate3d(1,0,0, 45deg)'\n  },\n  grass: {\n  },\n  draggable: {\n    cursor: 'move'\n  }\n})\n\nfunction Team() {\n  const classes = useTeamStyles();\n\n  const height = 120;\n  const width = 120;\n  const iconWidth = 20;\n  \n  const mins = [3, 2, 1];\n\n  const formation = [4, 4, 2];\n  const ys = [80, 50, 20];\n  const margins = [ 15, 20, 25 ];\n  const spacing = [0, 0, 20, 10, 5, 3];\n  var coords = [];\n\n  \n  for (var i = 0; i < 3; i++) {\n    var pos = formation[i]\n    var cx = width / 2 - (spacing[pos] + iconWidth) * (pos-1) / 2\n    for (var j = 0; j < pos; j++) {\n      coords.push([cx, ys[i]])\n      cx += (iconWidth + spacing[pos])\n    }\n  }\n\n  function makeDraggable(evt) {\n    var svg = evt.target;\n    function startDrag(evt) {\n      console.log('evt')\n    }\n    function drag(evt) {\n      console.log('evt')\n    }\n    function endDrag(evt) {\n      console.log('evt')\n    }\n    svg.addEventListener('mousedown', startDrag);\n    svg.addEventListener('mousemove', drag);\n    svg.addEventListener('mouseup', endDrag);\n    svg.addEventListener('mouseleave', endDrag);\n  }\n  \n\n  return (\n    <div>\n      <svg className={classes.field} viewBox='0 0 120 120' \n       xmlns=\"http://www.w3.org/2000/svg\" onLoad={makeDraggable}>\n        <defs>\n          <pattern id='sonny' width='100%' height='100%' viewBox='0 0 512 512'>\n            <image href='https://resources.premierleague.com/premierleague/photos/players/110x140/p85971.png'\n             width='512' height='512' />\n          </pattern>\n        </defs>\n        {/* <rect className={classes.grass} width='100%' height='100%' stroke='black' fill='green' />\n        <line x1='0' y1='50%' x2='100%' y2='50%' stroke='white' />\n        <circle cx='50%' cy='50%' r='12%' stroke='white' fill='transparent'/>\n        <rect width='100%' height='100%' stroke='black' fill='transparent' strokeWidth='3' /> */}\n        <polygon points='10,110 110,110 95,0 25,0' fill='#32a852' stroke='black' />\n        <line x1='18.25' y1='50' x2='101.75' y2='50' stroke='white' />\n        <ellipse cx='60' cy='51' rx='12' ry='8' stroke='white' fill='transparent' />\n        <polygon points='52,110 68,110 67.4,106 52.6,106' stroke='white' fill='transparent'/>\n\n        <polygon points='10,110 110,110 95,0 25,0' fill='transparent' stroke='black' strokeWidth='1.5' />\n        \n        {/* Goalkeeper */}\n        {/* <circle cx='60' cy='105' r='10' fill='white'/>\n        <circle cx='60' cy='105' r='10' fill='url(#sonny)' stroke='black'/> */}\n\n        {/* Defenders */}\n        {coords.map(([x, y]) => (\n          <g key={x*1000 + y} className={classes.draggable}>\n            <circle cx={x} cy={y} r='10' fill='white'/>\n            <circle cx={x} cy={y} r='10' fill='url(#sonny)' stroke='black'/>\n          </g>\n        ))}\n      </svg>\n    </div>\n  )\n}\n\nconst useLoginStyles = makeStyles({\n  box: {\n    width: '50%',\n    margin: 'auto',\n    padding: '20px'\n  }, \n  input: {\n    width: '75%',\n    margin: 'auto',\n    display: 'flex',\n    //marginTop: 20\n  }\n})\n\nfunction doLogin(username, password) {\n  fetch('/api/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    })\n  })\n  .then(response => {console.log(response); return response.json()})\n  .then(json => console.log(json))\n  .catch(error => console.log(error))\n}\n\nfunction Login() {\n  const classes = useLoginStyles();\n  \n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  \n  useEffect(() => {\n    console.log('Event listener added.')\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        console.log(\"Enter key was pressed. Run your function.\");\n        doLogin(username, password);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <Card variant='outlined' className={classes.box}>\n        <Grid container direction='column' spacing={2}>\n          <Grid item>\n            <Typography variant='h4' align='center'>Log In</Typography>\n          </Grid>\n          <Grid item>\n            <TextField label='Username' variant='filled' \n              className={classes.input}\n              onChange={event => setUsername(event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <TextField label='Password' variant='filled' \n              className={classes.input} type='password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Grid>\n          <Grid item>\n            <Button style={{margin: 'auto', display: 'flex'}}\n             onClick={() => doLogin(username, password)}>\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n    </div>\n  )\n}\n  \nconst useAppStyles = makeStyles((themes) => ({\n  toolbar: themes.mixins.toolbar,\n  content: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth\n  }\n}));\n\nfunction App() {\n  const classes = useAppStyles();\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Container disableGutters={true}>\n          <Sidebar />\n          <Header />\n          <Grid className={classes.content} container direction=\"column\" spacing={4}>\n            <Grid item><div className={classes.toolbar} /></Grid>\n            <Grid item container>\n              {/* <Grid item xs='auto' md={1}/> */}\n              <Grid item xs={12}>\n                <Switch>\n                  {/* A <Switch> looks through its children <Route>s and\n                  renders the first one that matches the current URL. */}\n                  <Route path=\"/players\">\n                    <Content />\n                  </Route>\n                  <Route path='/login'>\n                    <Login />\n                  </Route>\n                  <Route path='/team'>\n                    <Team />\n                  </Route>\n                  <Route path=\"/\">\n                    <Main />\n                  </Route>\n                </Switch>\n              </Grid>\n              {/* <Grid item xs='auto' md={1}/> */}\n            </Grid>\n            <Grid item />\n            <Grid item><Divider /></Grid>\n            <Grid item />\n            <Grid item><Footer /></Grid>\n          </Grid>\n        </Container>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}